name: Build & Push Docker Images

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  backend:
    name: Build Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build & Push backend
        uses: docker/build-push-action@v5
        with:
          context: ./Backend
          file: ./Backend/Dockerfile
          push: true
          tags: |
            ghcr.io/salsabilngh/ids/ids-api:latest
            ghcr.io/salsabilngh/ids/ids-api:${{ github.sha }}

  frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Patch web-vitals imports (no-op)
        working-directory: Frontend
        run: |
          mkdir -p src
          cat <<'EOF' > src/noop-web-vitals.js
export const onCLS = () => {};
export const onFID = () => {};
export const onLCP = () => {};
export default function reportWebVitals() {}
EOF

          find src -type f \( -name "*.js" -o -name "*.jsx" -o -name "*.ts" -o -name "*.tsx" \) -print0 | xargs -0 sed -i -E "s#(['\"])web-vitals\\1#\\1./noop-web-vitals\\1#g"

          if [ -f src/index.js ]; then
            cp -n src/index.js src/index.js.bak || true
            cat <<'EOF' > src/index.js
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<App />);
EOF
          fi

          ! grep -Rni "web-vitals" src || (echo "still contains web-vitals" && exit 1)

      - name: Install deps & build
        working-directory: Frontend
        run: |
          rm -rf node_modules package-lock.json
          npm install web-vitals --save
          npm install --legacy-peer-deps --no-audit --no-fund
          npm run build

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./Frontend
          file: ./Frontend/Dockerfile
          push: true
          tags: |
            ghcr.io/salsabilngh/ids/frontend:latest
            ghcr.io/salsabilngh/ids/frontend:${{ github.sha }}

